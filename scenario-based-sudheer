from pyspark.sql.functions import col,when,lit,count,rank 
from pyspark.sql import window
from pyspark.sql import SparkSession 

spark = SparkSession.builder.getOrCreate()

king_data = [
    (1, 'Robb Stark', 'House Stark'),
    (2, 'Joffrey Baratheon', 'House Lannister'),
    (3, 'Stannis Baratheon', 'House Baratheon'),
    (4, 'Balon Greyjoy', 'House Greyjoy'),
    (5, 'Mace Tyrell', 'House Tyrell'),
    (6, 'Doran Martell', 'House Martell')
]
king_schema = "k_no int , king string , house string"
king_df = spark.createDataFrame(king_data, king_schema)

battle_data = [
    (1, 'Battle of Oxcross', 1, 2, 1, 'The North'),
    (2, 'Battle of Blackwater', 3, 4, 0, 'The North'),
    (3, 'Battle of the Fords', 1, 5, 1, 'The Reach'),
    (4, 'Battle of the Green Fork', 2, 6, 0, 'The Reach'),
    (5, 'Battle of the Ruby Ford', 1, 3, 1, 'The Riverlands'),
    (6, 'Battle of the Golden Tooth', 2, 1, 0, 'The North'),
    (7, 'Battle of Riverrun', 3, 4, 1, 'The Riverlands'),
    (8, 'Battle of Riverrun', 1, 3, 0, 'The Riverlands')
]

battle_schema = "battle_number int , name string ,attacker_king int , defender_king int , attacker_outcome int , region string"

battle_df = spark.createDataFrame(data = battle_data ,schema = battle_schema)
king_df.display()

king_df.display()
battle_df.display()

battle_winner_df = battle_df.withColumn('winner_king', when(col('attacker_outcome') == 1, col('attacker_king')).otherwise(col('defender_king'))).select('region', 'winner_king') 
battle_winner_df.display()

battle_winner_data_df = battle_winner_df.join(king_df, on = col('winner_king') == col('k_no')).select('region','house')

battle_winner_data_df.show()

from pyspark.sql import Window

df_answer = (
              battle_winner_data_df.groupBy('region','house').agg(
                  count(lit(1)).alias('no_of_wins')
             
             )
             .withColumn('rk', rank().over(Window.partitionBy(col('region')).orderBy(col('no_of_wins').desc()))) 
             .filter(col('rk')== 1)
             .select('region','house','no_of_wins')
           )
df_answer.display()

